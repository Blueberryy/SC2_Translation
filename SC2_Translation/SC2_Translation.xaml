<fluent:RibbonWindow
    x:Class="SC2_Translation.SC2_TranslationWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SC2_Translation"
    xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:fluent="urn:fluent-ribbon"
    mc:Ignorable="d"
    Title="{DynamicResource ResourceKey=WindowTitleText}"
    Height="900"
    Width="1650"
    Icon="Ico.ico"
    MinWidth="1000"
    MinHeight="400"
    WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary
            x:Name="ResourceDictionary_WindowLanguage">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="Language\zh-CN.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="6*" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="*" />
        </Grid.RowDefinitions>
        <!--#region Ribbon-->
        <fluent:Ribbon
            Name="Ribbon_Main"
            SelectedTabIndex="0"
            Grid.Row="0">
            <fluent:Ribbon.ContextualGroups>
                <fluent:RibbonContextualTabGroup
                    x:Name="RibbonContextualTabGroup_Config"
                    BorderBrush="Magenta"
                    Background="Magenta"
                    Foreground="Purple"
                    Header="{DynamicResource ResourceKey=RibbonContextualTabGroup_Config_Header}"
                    Visibility="Visible" />
            </fluent:Ribbon.ContextualGroups>
            <fluent:Ribbon.Menu>
                <Grid>
                    <fluent:Backstage>
                        <fluent:BackstageTabControl>
                            <fluent:Button
                                x:Name="RibbonButton_Open"
                                Header="打开"
                                Icon="{StaticResource ResourceKey=IMAGE_Open}"
                                LargeIcon="{StaticResource ResourceKey=IMAGE_Open}"
                                KeyTip="O" />
                            <Separator />
                            <fluent:Button
                                x:Name="RibbonSplitButton_Save"
                                Header="保存"
                                Icon="{StaticResource ResourceKey=IMAGE_Save}"
                                LargeIcon="{StaticResource ResourceKey=IMAGE_Save}"
                                KeyTip="S" />
                            <Separator />
                            <fluent:Button
                                x:Name="RibbonButton_Close"
                                Header="关闭"
                                Icon="{StaticResource ResourceKey=IMAGE_Close}"
                                LargeIcon="{StaticResource ResourceKey=IMAGE_Close}"
                                KeyTip="C" />
                        </fluent:BackstageTabControl>
                    </fluent:Backstage>
                </Grid>
            </fluent:Ribbon.Menu>
            <fluent:Ribbon.QuickAccessItems>
            </fluent:Ribbon.QuickAccessItems>
            
            <!--#region 翻译对象-->
            <fluent:RibbonTabItem
                Name="RibbonTabItem_TranslateSelection"
                Header="{DynamicResource ResourceKey=RibbonTabItem_TranslateSelection_Header}">
                <fluent:RibbonGroupBox
                    Name="RibbonGroupBox_TS_Path">
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <!--#endregion-->
            
            <!--#region 配置-->
            <fluent:RibbonTabItem
                Name="RibbonTabItem_Config"
                Group="{Binding ElementName=RibbonContextualTabGroup_Config, Mode=OneWay}"
                Header="{DynamicResource ResourceKey=RibbonTabItem_Config_Header}">
                <fluent:RibbonGroupBox
                    Name="RiibonGroupBox_CFG_Language"
                    Header="{DynamicResource ResourceKey=RiibonGroupBox_CFG_Language_Header}">
                    <fluent:ComboBox
                        Name="ComboBox_SoftwareLanguage"
                        Header="Language:"
                        IsReadOnly="True"
                        SizeDefinition="Large"
                        Style="{StaticResource ResourceKey=FluentComboBoxStyle}"
                        Icon="{StaticResource ResourceKey=IMAGE_Language}"
                        VerticalContentAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch"
                        InputWidth="150"
                        SelectionChanged="ComboBox_SoftwareLanguage_SelectionChanged" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <!--#endregion-->
        </fluent:Ribbon>
        <!--#endregion-->
        <GridSplitter
            ResizeDirection="Rows"
            Grid.Row="2"
            Height="3"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center" />
        <GroupBox
            Name="GroupBox_Log"
            Grid.Row="3"
            Header="{DynamicResource ResourceKey=LogGroupBox_Log_Header}"
            Margin="3">
            <avalon:TextEditor
                Name="AvalonTextEditor_Log"
                ShowLineNumbers="True"
                WordWrap="True"
                Margin="0,10,6,-4"
                IsReadOnly="True">
                <avalon:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Name="MenuItem_LogClear"
                            Header="{DynamicResource MenuItem_LogClear_Header}" />
                    </ContextMenu>
                </avalon:TextEditor.ContextMenu>
            </avalon:TextEditor>
        </GroupBox>
    </Grid>
</fluent:RibbonWindow>
